{"version":3,"sources":["components/Snake.jsx","App.js","reportWebVitals.js","index.js"],"names":["sorteiaPos","x","y","Math","ceil","random","Snake","state","snake","fruit","dir","run","score","best","dead","teclado","bind","move","reiniciar","atualizar","sorteiaFruta","window","addEventListener","e","this","timer","setInterval","clearInterval","prevSnake","ps","d","hx","hy","unshift","p","t","key","toLowerCase","includes","s","nx","ny","setState","console","log","sensores","shift","JSON","stringify","h","indexOf","pop","a","ok","pos","className","style","left","top","map","id","type","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44512623.chunk.js","sourcesContent":["// Desenvolvido por Gabriel Rodrigues Leite 2021 ©\n// Como forma de treinar js e React\n// TODO: level up\n// TODO: nota de falecimento\n\nimport React from 'react';\nimport './Snake.css'\n\nconst H = 20;\nconst V = 20;\nconst sorteiaPos = (x, y) => [Math.ceil(x*Math.random()-1), Math.ceil(y*Math.random()-1)];\n\nexport default class Snake extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      snake: [[10, 8],[10, 9],[10, 10]],\n      fruit: [2, 2],\n      dir: 'a',\n      run: false,\n      score: 0,\n      best: 0,\n      dead: false,\n    }\n    this.teclado = this.teclado.bind(this);\n    this.move = this.move.bind(this);\n    this.reiniciar = this.reiniciar.bind(this);\n    this.atualizar = this.atualizar.bind(this);\n    this.sorteiaFruta = this.sorteiaFruta.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", (e) => this.teclado(e, true));\n    window.addEventListener(\"keyup\", (e) => this.teclado(e, false));\n    this.timer = setInterval(this.atualizar, 500);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  move(prevSnake) {\n    let ps = [...prevSnake];\n    let d = [0,0];\n    \n    switch (this.state.dir) {\n      case 'w': d = [0, -1]; break;\n      case 's': d = [0, 1]; break;\n      case 'a': d = [-1, 0]; break;\n      case 'd': d = [1, 0]; break;\n      default: d = [0, 0]; break;\n    }\n\n    let [x, y] = prevSnake[0];\n    let [hx, hy] = [x+d[0], y+d[1]]\n\n    ps.unshift([hx, hy]);\n    return ps;\n  }\n\n  teclado(e, p) {\n    const t = e.key.toLowerCase();\n    if ('wasd'.includes(t)) { // agora ficou redundante mas vou deixar assim por enquanto\n      let s = [...this.state.snake]\n      let [hx, hy] = s[0];\n      let [nx, ny] = s[1];\n\n      if (( t === 'a' ) && hx -1 === nx) return;\n      if (( t === 'd' ) && hx +1 === nx) return;\n      if (( t === 'w' ) && hy -1 === ny) return;\n      if (( t === 's' ) && hy +1 === ny) return;\n\n      this.setState(({dead})=>({\n        dir: t,\n        run: dead ? false : true,\n      }));\n    }\n  }\n\n  reiniciar() {\n    console.log('reiniciar');\n    if(this.state.dead && this.state.score > this.state.best) this.setState(({score, best})=>({best: score}));\n    if(!this.state.run) {\n      this.setState({\n        snake: [[10, 8],[10, 9],[10, 10]],\n        fruit: [2, 2],\n        dir: 'a',\n        run: false,\n        score: 0,\n        dead: false,\n      });\n    }\n  }\n\n  atualizar() {\n    console.log('atualizar');\n    if(this.state.run) {\n      this.setState(({snake}) => ({\n        snake: this.move(snake),\n      }),this.sensores);\n    }\n  }\n\n  sensores() {\n    const {snake} = this.state;\n    const [hx, hy] = snake[0];\n    // parede\n    if (( hx+1 > H || hx < 0) || (hy+1 > V || hy < 0)) this.setState({\n      dead: true,\n      run: false,\n    })\n\n    // corpo\n    let s = [...snake];\n    s.shift();\n    s = JSON.stringify(s);\n    const h = JSON.stringify([hx , hy]);\n    if ( s.indexOf(h) !== -1) this.setState({dead: true, run: false});\n\n    // fruta\n    if(( hx === this.state.fruit[0] && hy === this.state.fruit[1])) {\n      this.setState(({score, snake}) => ({\n        score: score + 1,\n        fruit: this.sorteiaFruta(H, V, snake)\n      }));\n    } else { // nenhum || morreu\n      this.setState(({snake, dead}) => {\n        let ps = [...snake];\n        if(dead) ps.shift();\n        else ps.pop();\n        return {snake: ps}\n      });\n    }\n  }\n\n  sorteiaFruta(x, y, a) {\n    let ok = false;\n    let pos = [];\n    while(!ok) {\n      pos = sorteiaPos(H, V);\n      if (!a.includes(pos)) ok = true;\n    }\n    return pos;\n  }\n\n  render() {\n    const { snake, fruit, score, best } = this.state;\n    return (\n      <section className=\"Snake\">\n        <div className=\"fruta\" style={{left: `${fruit[0]}rem`, top: `${fruit[1]}rem`}}></div>\n        {snake.map(([x, y],id) => <div key={id} className=\"serpenteCorpo\" style={{left: `${x}rem`, top: `${y}rem`}}></div>)}\n        <button id=\"reiniciar\" type=\"button\" onClick={this.reiniciar}>Reiniciar</button>\n        <p id=\"score\">Score:{score}</p>\n        { best ? <p id=\"best\">Best:{best}</p> : null}\n      </section>\n    );\n  }\n}","import './App.css';\nimport Snake from './components/Snake';\n\nfunction App() {\n  return (\n    <>\n      <Snake />\n      <p>Gabriel Rodrigues Leite © 2021</p>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}